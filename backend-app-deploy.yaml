# Backend Pipeline with Testing for Java Backend Application
trigger:
- main

variables:
  containerRegistry: 'myacr.azurecr.io'
  dockerRegistryServiceConnection: 'my-acr-connection'
  aksResourceGroup: 'my-aks-resource-group'
  aksClusterName: 'my-aks-cluster'
  devNamespace: 'backend-dev'
  kubernetesManifests: 'k8s/backend'

stages:
- stage: Test
  displayName: 'Test Java Backend Code'
  jobs:
  - job: Test_Backend
    displayName: 'Run Unit Tests'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        cd backend
        mvn clean test
      displayName: 'Run Maven Unit Tests for Backend'

- stage: Build
  displayName: 'Build and Push Backend Docker Image'
  dependsOn: Test   # Run Build only if Test stage is successful
  jobs:
  - job: Build_Backend
    displayName: 'Build and Push Backend Image'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        docker build -t $(containerRegistry)/java-backend:$(Build.BuildId) -f backend/Dockerfile backend/
      displayName: 'Build Docker Image from Dockerfile'
    - task: Docker@2
      displayName: 'Push Docker Image to ACR'
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(containerRegistry)/java-backend
        command: 'push'
        tags: $(Build.BuildId)

- stage: Deploy_Dev
  displayName: 'Deploy Backend to Development Environment'
  dependsOn: Build
  jobs:
  - job: Deploy_Backend_Dev
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Set AKS Credentials'
      inputs:
        azureSubscription: $(dockerRegistryServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName) --admin
    - script: |
        sed -i 's|image: .*/java-backend:.*|image: $(containerRegistry)/java-backend:$(Build.BuildId)|' $(kubernetesManifests)/deployment.yaml
      displayName: 'Update Backend Deployment YAML with New Image'
    - script: |
        kubectl apply -f $(kubernetesManifests)/deployment.yaml --namespace=$(devNamespace)
      displayName: 'Deploy Backend to AKS'
